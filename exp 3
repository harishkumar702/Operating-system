#include <stdio.h>

struct Process {
    int pid;        // Process ID
    int burstTime;  // Burst Time
    int waitingTime;
    int turnaroundTime;
};

void calculateTimes(struct Process p[], int n) {
    p[0].waitingTime = 0; // First process has no waiting time
    for (int i = 1; i < n; i++) {
        p[i].waitingTime = p[i - 1].waitingTime + p[i - 1].burstTime;
    }

    for (int i = 0; i < n; i++) {
        p[i].turnaroundTime = p[i].waitingTime + p[i].burstTime;
    }
}

void displayResults(struct Process p[], int n) {
    printf("PID\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t\t%d\t\t%d\n", p[i].pid, p[i].burstTime, p[i].waitingTime, p[i].turnaroundTime);
    }
}

int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    struct Process p[n];
    for (int i = 0; i < n; i++) {
        p[i].pid = i + 1;
        printf("Enter burst time for process %d: ", p[i].pid);
        scanf("%d", &p[i].burstTime);
    }

    calculateTimes(p, n);
    displayResults(p, n);

    return 0;
}
