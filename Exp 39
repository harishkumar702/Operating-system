#include <stdio.h>
#include <stdlib.h>
#define MAX_REQUESTS 100
void sortRequests(int requests[], int n) {
    int i, j, temp;
    for (i = 0; i < n - 1; i++) {
        for (j = 0; j < n - i - 1; j++) {
            if (requests[j] > requests[j + 1]) {
                temp = requests[j];
                requests[j] = requests[j + 1];
                requests[j + 1] = temp;
            }
        }
    }
}
int main() {
    int requests[MAX_REQUESTS], n, head, direction, i, j;
    int total_movement = 0;
    printf("Enter the number of disk requests: ");
    scanf("%d", &n);
    printf("Enter the disk requests: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &requests[i]);
    }
    printf("Enter the initial position of the disk head: ");
    scanf("%d", &head);
    printf("Enter the direction (1 for high, 0 for low): ");
    scanf("%d", &direction);
    requests[n] = head;
    n++;
    sortRequests(requests, n);
    int start = 0;
    for (i = 0; i < n; i++) {
        if (requests[i] == head) {
            start = i;
            break;
        }
    }
    printf("\nDisk head movement sequence:\n");
    if (direction == 1) {
        for (i = start; i < n; i++) {
            printf("Move from %d to %d\n", head, requests[i]);
            total_movement += abs(requests[i] - head);
            head = requests[i];
        }
        for (i = start - 1; i >= 0; i--) {
            printf("Move from %d to %d\n", head, requests[i]);
            total_movement += abs(requests[i] - head);
            head = requests[i];
        }
    } else {
        for (i = start; i >= 0; i--) {
            printf("Move from %d to %d\n", head, requests[i]);
            total_movement += abs(requests[i] - head);
            head = requests[i];
        }
        for (i = start + 1; i < n; i++) {
            printf("Move from %d to %d\n", head, requests[i]);
            total_movement += abs(requests[i] - head);
            head = requests[i];
        }
    }
    printf("\nTotal head movement: %d cylinders\n", total_movement);
    return 0;
}
