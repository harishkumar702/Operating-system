#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_NAME_LEN 50
#define FILENAME "employee_data.dat"

typedef struct {
    int id;
    char name[MAX_NAME_LEN];
    float salary;
} Employee;

void addEmployee() {
    FILE *file = fopen(FILENAME, "ab");
    if (!file) {
        printf("Error opening file.\n");
        return;
    }

    Employee emp;
    printf("Enter Employee ID: ");
    scanf("%d", &emp.id);
    printf("Enter Employee Name: ");
    scanf("%s", emp.name);
    printf("Enter Employee Salary: ");
    scanf("%f", &emp.salary);

    fwrite(&emp, sizeof(Employee), 1, file);
    fclose(file);
    printf("Employee record added successfully.\n");
}

void displayAllEmployees() {
    FILE *file = fopen(FILENAME, "rb");
    if (!file) {
        printf("Error opening file or no records available.\n");
        return;
    }

    Employee emp;
    printf("\nEmployee Details:\n");
    while (fread(&emp, sizeof(Employee), 1, file)) {
        printf("ID: %d, Name: %s, Salary: %.2f\n", emp.id, emp.name, emp.salary);
    }

    fclose(file);
}

void searchEmployeeByID() {
    FILE *file = fopen(FILENAME, "rb");
    if (!file) {
        printf("Error opening file.\n");
        return;
    }

    int id;
    printf("Enter Employee ID to search: ");
    scanf("%d", &id);

    Employee emp;
    while (fread(&emp, sizeof(Employee), 1, file)) {
        if (emp.id == id) {
            printf("Employee Found: ID: %d, Name: %s, Salary: %.2f\n", emp.id, emp.name, emp.salary);
            fclose(file);
            return;
        }
    }

    printf("Employee with ID %d not found.\n", id);
    fclose(file);
}

void updateEmployeeSalary() {
    FILE *file = fopen(FILENAME, "r+b");
    if (!file) {
        printf("Error opening file.\n");
        return;
    }

    int id;
    float newSalary;
    printf("Enter Employee ID to update: ");
    scanf("%d", &id);
    printf("Enter new salary: ");
    scanf("%f", &newSalary);

    Employee emp;
    while (fread(&emp, sizeof(Employee), 1, file)) {
        if (emp.id == id) {
            emp.salary = newSalary;
            fseek(file, -sizeof(Employee), SEEK_CUR);
            fwrite(&emp, sizeof(Employee), 1, file);
            printf("Employee salary updated successfully.\n");
            fclose(file);
            return;
        }
    }

    printf("Employee with ID %d not found.\n", id);
    fclose(file);
}

int main() {
    int choice;

    while (1) {
        printf("\nEmployee Management System:\n");
        printf("1. Add Employee\n");
        printf("2. Display All Employees\n");
        printf("3. Search Employee by ID\n");
        printf("4. Update Employee Salary\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addEmployee();
                break;
            case 2:
                displayAllEmployees();
                break;
            case 3:
                searchEmployeeByID();
                break;
            case 4:
                updateEmployeeSalary();
                break;
            case 5:
                printf("Exiting program.\n");
                return 0;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
}
